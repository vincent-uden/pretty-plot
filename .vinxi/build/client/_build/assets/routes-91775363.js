const _="modulepreload",E=function(t){return"/_build/"+t},f={},u=function(s,e,r){if(!e||e.length===0)return s();const o=document.getElementsByTagName("link");return Promise.all(e.map(i=>{if(i=E(i),i in f)return;f[i]=!0;const n=i.endsWith(".css"),c=n?'[rel="stylesheet"]':"";if(!!r)for(let a=o.length-1;a>=0;a--){const p=o[a];if(p.href===i&&(!n||p.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${i}"]${c}`))return;const l=document.createElement("link");if(l.rel=n?"stylesheet":_,n||(l.as="script",l.crossOrigin=""),l.href=i,document.head.appendChild(l),n)return new Promise((a,p)=>{l.addEventListener("load",a),l.addEventListener("error",()=>p(new Error(`Unable to preload CSS for ${i}`)))})})).then(()=>s()).catch(i=>{const n=new Event("vite:preloadError",{cancelable:!0});if(n.payload=i,window.dispatchEvent(n),!n.defaultPrevented)throw i})},d=[{type:"page",$component:{src:"src/routes/about.tsx?pick=default&pick=$css",build:()=>u(()=>import("./about-47592069.js"),["assets/about-47592069.js","assets/web-b1c3e1d3.js","assets/components-3e18708d.js","assets/routing-53104a05.js"]),import:()=>{const t="src/routes/about.tsx?pick=default&pick=$css";return u(()=>import(globalThis.MANIFEST.client.inputs[t].output.path),[])}},path:"/about",filePath:"E:/Github/pretty-plot/src/routes/about.tsx"},{type:"page",$component:{src:"src/routes/index.tsx?pick=default&pick=$css",build:()=>u(()=>import("./index-d5905075.js").then(t=>t.i),["assets/index-d5905075.js","assets/web-b1c3e1d3.js"]),import:()=>{const t="src/routes/index.tsx?pick=default&pick=$css";return u(()=>import(globalThis.MANIFEST.client.inputs[t].output.path),[])}},path:"/",filePath:"E:/Github/pretty-plot/src/routes/index.tsx"},{type:"page",$component:{src:"src/routes/[...404].tsx?pick=default&pick=$css",build:()=>u(()=>import("./_...404_-25227d4d.js"),["assets/_...404_-25227d4d.js","assets/web-b1c3e1d3.js","assets/components-3e18708d.js","assets/routing-53104a05.js"]),import:()=>{const t="src/routes/[...404].tsx?pick=default&pick=$css";return u(()=>import(globalThis.MANIFEST.client.inputs[t].output.path),[])}},path:"/*404",filePath:"E:/Github/pretty-plot/src/routes/[...404].tsx"}],R=g(d.filter(t=>t.type==="page"));x(d.filter(t=>t.type==="api"));function g(t){function s(e,r,o,i){const n=Object.values(e).find(c=>o.startsWith(c.id+"/"));return n?(s(n.children||(n.children=[]),r,o.slice(n.id.length)),e):(e.push({...r,id:o,path:o.replace(/\/\([^)/]+\)/g,"")}),e)}return t.sort((e,r)=>e.path.length-r.path.length).reduce((e,r)=>s(e,r,r.path,r.path),[])}function x(t){return t.flatMap(s=>m(s.path).map(r=>({...s,path:r}))).map(k).sort((s,e)=>e.score-s.score)}function m(t){let s=/(\/?\:[^\/]+)\?/.exec(t);if(!s)return[t];let e=t.slice(0,s.index),r=t.slice(s.index+s[0].length);const o=[e,e+=s[1]];for(;s=/^(\/\:[^\/]+)\?/.exec(r);)o.push(e+=s[1]),r=r.slice(s[0].length);return m(r).reduce((i,n)=>[...i,...o.map(c=>c+n)],[])}function k(t){const s=t.path.split("/").filter(Boolean),e=[],r=[];let o=0,i=!1;for(const[n,c]of s.entries())if(c[0]===":"){const h=c.slice(1);o+=3,e.push({type:":",name:h,index:n}),r.push(null)}else c[0]==="*"?(o-=1,e.push({type:"*",name:c.slice(1),index:n}),i=!0):(o+=4,r.push(c));return{...t,score:o,params:e,matchSegments:r,wildcard:i}}export{u as _,R as p};
